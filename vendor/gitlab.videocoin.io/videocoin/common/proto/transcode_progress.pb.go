// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transcode_progress.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TranscodeProgress struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty" gorm:"primary_key:transcoder_id,broadcast_id;type:char(32)"`
	TranscoderId         string   `protobuf:"bytes,2,opt,name=transcoder_id,json=transcoderId,proto3" json:"transcoder_id,omitempty" gorm:"primary_key:transcoder_id,broadcast_id;type:char(32)"`
	ProcessedFrames      int64    `protobuf:"varint,3,opt,name=processed_frames,json=processedFrames,proto3" json:"processed_frames,omitempty" gorm:"type:int(32)"`
	TotalFrames          int64    `protobuf:"varint,4,opt,name=total_frames,json=totalFrames,proto3" json:"total_frames,omitempty" gorm:"type:int(32)"`
	Fps                  float64  `protobuf:"fixed64,5,opt,name=fps,proto3" json:"fps,omitempty" gorm:"type:float(10,6)"`
	Bitrate              string   `protobuf:"bytes,6,opt,name=bitrate,proto3" json:"bitrate,omitempty" gorm:"type:varchar(64)"`
	Speed                string   `protobuf:"bytes,7,opt,name=speed,proto3" json:"speed,omitempty" gorm:"type:varchar(32)"`
	Eta                  float64  `protobuf:"fixed64,8,opt,name=eta,proto3" json:"eta,omitempty" gorm:"type:float(10,6)"`
	PercentageDone       string   `protobuf:"bytes,9,opt,name=percentage_done,json=percentageDone,proto3" json:"percentage_done,omitempty" gorm:"type:varchar(16)"`
	TimeElapsed          string   `protobuf:"bytes,10,opt,name=time_elapsed,json=timeElapsed,proto3" json:"time_elapsed,omitempty" gorm:"type:varchar(16)"`
	LastUpdated          string   `protobuf:"bytes,11,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty" gorm:"type:timestamp"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranscodeProgress) Reset()         { *m = TranscodeProgress{} }
func (m *TranscodeProgress) String() string { return proto.CompactTextString(m) }
func (*TranscodeProgress) ProtoMessage()    {}
func (*TranscodeProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_transcode_progress_907345ea9c91471e, []int{0}
}
func (m *TranscodeProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranscodeProgress.Unmarshal(m, b)
}
func (m *TranscodeProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranscodeProgress.Marshal(b, m, deterministic)
}
func (dst *TranscodeProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranscodeProgress.Merge(dst, src)
}
func (m *TranscodeProgress) XXX_Size() int {
	return xxx_messageInfo_TranscodeProgress.Size(m)
}
func (m *TranscodeProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_TranscodeProgress.DiscardUnknown(m)
}

var xxx_messageInfo_TranscodeProgress proto.InternalMessageInfo

func (m *TranscodeProgress) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *TranscodeProgress) GetTranscoderId() string {
	if m != nil {
		return m.TranscoderId
	}
	return ""
}

func (m *TranscodeProgress) GetProcessedFrames() int64 {
	if m != nil {
		return m.ProcessedFrames
	}
	return 0
}

func (m *TranscodeProgress) GetTotalFrames() int64 {
	if m != nil {
		return m.TotalFrames
	}
	return 0
}

func (m *TranscodeProgress) GetFps() float64 {
	if m != nil {
		return m.Fps
	}
	return 0
}

func (m *TranscodeProgress) GetBitrate() string {
	if m != nil {
		return m.Bitrate
	}
	return ""
}

func (m *TranscodeProgress) GetSpeed() string {
	if m != nil {
		return m.Speed
	}
	return ""
}

func (m *TranscodeProgress) GetEta() float64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

func (m *TranscodeProgress) GetPercentageDone() string {
	if m != nil {
		return m.PercentageDone
	}
	return ""
}

func (m *TranscodeProgress) GetTimeElapsed() string {
	if m != nil {
		return m.TimeElapsed
	}
	return ""
}

func (m *TranscodeProgress) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

func init() {
	proto.RegisterType((*TranscodeProgress)(nil), "proto.TranscodeProgress")
}

func init() {
	proto.RegisterFile("transcode_progress.proto", fileDescriptor_transcode_progress_907345ea9c91471e)
}

var fileDescriptor_transcode_progress_907345ea9c91471e = []byte{
	// 482 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x1b, 0x46, 0x37, 0xe6, 0x06, 0x06, 0x46, 0x68, 0x5e, 0x87, 0xda, 0x2a, 0xa7, 0x54,
	0xda, 0x56, 0xca, 0x60, 0x87, 0x0e, 0x81, 0x14, 0x0d, 0xc4, 0x6e, 0xa8, 0x82, 0x0b, 0x97, 0xc8,
	0x89, 0xdf, 0x66, 0x11, 0x49, 0x6c, 0xd9, 0x6f, 0x91, 0xfa, 0x4d, 0xf8, 0x48, 0x1c, 0xf9, 0x04,
	0x15, 0x2a, 0x27, 0xae, 0xfd, 0x04, 0x28, 0x4e, 0xff, 0xc1, 0xa1, 0x70, 0xe0, 0xe4, 0x58, 0xfe,
	0xfd, 0x9e, 0xf7, 0x71, 0xa2, 0x10, 0x86, 0x9a, 0x17, 0x26, 0x96, 0x02, 0x42, 0xa5, 0x65, 0xa2,
	0xc1, 0x98, 0x33, 0xa5, 0x25, 0x4a, 0x5a, 0xb7, 0x4b, 0xf3, 0x38, 0x91, 0x32, 0xc9, 0xa0, 0x67,
	0x77, 0xd1, 0x78, 0xd4, 0x83, 0x5c, 0xe1, 0xa4, 0x62, 0x9a, 0x8f, 0x17, 0x87, 0x5c, 0xa5, 0x3d,
	0x5e, 0x14, 0x12, 0x39, 0xa6, 0xb2, 0x58, 0x24, 0x34, 0x4f, 0x93, 0x14, 0x6f, 0xc6, 0xd1, 0x59,
	0x2c, 0xf3, 0x5e, 0x22, 0x13, 0xb9, 0xce, 0x28, 0x77, 0x76, 0x63, 0x9f, 0x2a, 0xdc, 0xfb, 0x59,
	0x27, 0x0f, 0xde, 0x2f, 0xdb, 0xbc, 0x5b, 0x94, 0xa1, 0x11, 0x71, 0x23, 0x2d, 0xb9, 0x88, 0xb9,
	0xc1, 0x30, 0x15, 0xcc, 0xe9, 0x38, 0xfe, 0x7e, 0xf0, 0x6a, 0x3e, 0x6d, 0x5f, 0x26, 0x52, 0xe7,
	0x03, 0x4f, 0xe9, 0x34, 0xe7, 0x7a, 0x12, 0x7e, 0x82, 0xc9, 0x60, 0x75, 0x19, 0x1d, 0xa6, 0xe2,
	0x64, 0xd3, 0xbb, 0xc4, 0x89, 0x82, 0x41, 0x7c, 0xc3, 0xb5, 0x7f, 0xfe, 0xb4, 0xeb, 0x0d, 0x1b,
	0xab, 0xc3, 0x6b, 0x41, 0x05, 0xb9, 0xfb, 0x9b, 0xc9, 0x6e, 0xfd, 0x9f, 0x21, 0xee, 0x1a, 0xbd,
	0x16, 0x34, 0x20, 0xf7, 0x95, 0x96, 0x31, 0x18, 0x03, 0x22, 0x1c, 0x69, 0x9e, 0x83, 0x61, 0x3b,
	0x1d, 0xc7, 0xdf, 0x09, 0x0e, 0xe7, 0xd3, 0xf6, 0xc3, 0x6a, 0x90, 0x4d, 0x48, 0x0b, 0xac, 0x02,
	0x0e, 0x56, 0xc2, 0x1b, 0xcb, 0xd3, 0x01, 0x71, 0x51, 0x22, 0xcf, 0x96, 0xfe, 0xed, 0xed, 0x7e,
	0xc3, 0xc2, 0x0b, 0xf7, 0x94, 0xec, 0x8c, 0x94, 0x61, 0xf5, 0x8e, 0xe3, 0x3b, 0xc1, 0xf1, 0x7c,
	0xda, 0x3e, 0xdc, 0x50, 0x46, 0x99, 0xe4, 0xe8, 0xf7, 0x9f, 0x9c, 0x5c, 0x74, 0xbd, 0x61, 0xc9,
	0xd1, 0xe7, 0x64, 0x2f, 0x4a, 0x51, 0x73, 0x04, 0xb6, 0x6b, 0x5f, 0xc7, 0x9f, 0xca, 0x67, 0xae,
	0xed, 0x55, 0x2f, 0x9e, 0x75, 0xbd, 0xe1, 0x92, 0xa5, 0x7d, 0x52, 0x37, 0x0a, 0x40, 0xb0, 0xbd,
	0xad, 0x92, 0xad, 0x57, 0x91, 0x65, 0x31, 0x40, 0xce, 0xee, 0xfc, 0x43, 0x31, 0x40, 0x4e, 0xaf,
	0xc8, 0x81, 0x02, 0x1d, 0x43, 0x81, 0x3c, 0x81, 0x50, 0xc8, 0x02, 0xd8, 0xfe, 0xd6, 0x59, 0xfd,
	0x52, 0xbd, 0xb7, 0x76, 0xae, 0x64, 0x01, 0xf4, 0x25, 0x71, 0x31, 0xcd, 0x21, 0x84, 0x8c, 0x2b,
	0x03, 0x82, 0x91, 0xbf, 0x47, 0x34, 0x4a, 0xe1, 0x75, 0xc5, 0xd3, 0x17, 0xc4, 0xcd, 0xca, 0xaf,
	0x3e, 0x56, 0x82, 0x23, 0x08, 0xd6, 0xb0, 0xfe, 0xd1, 0x7c, 0xda, 0x7e, 0xb4, 0xe1, 0x97, 0x86,
	0x41, 0x9e, 0x2b, 0x6f, 0xd8, 0x28, 0xf1, 0x0f, 0x15, 0x1d, 0x1c, 0x7d, 0x9d, 0xb5, 0x6a, 0xdf,
	0x66, 0xad, 0xda, 0xf7, 0x59, 0xab, 0xf6, 0xe5, 0x47, 0xab, 0xf6, 0xd6, 0xf9, 0x58, 0xfd, 0x70,
	0xd1, 0xae, 0x5d, 0xce, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x58, 0x77, 0x0b, 0xc8, 0x9a, 0x03,
	0x00, 0x00,
}
