syntax = "proto3";

package proto;

option go_package = "proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "health.proto";
import "playlist.proto";

option (gogoproto.unmarshaler_all) = false;
option (gogoproto.marshaler_all) = false;
option (gogoproto.sizer_all) = false;

service PlaylistService {
    rpc Health(google.protobuf.Empty) returns (HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc Create(Playlist) returns (Playlist) {
        option (google.api.http) = {
            post: "/api/v1/playlists",
            body: "*"
        };
    }

    rpc Get(GetPlaylistRequest) returns (Playlist) {
        option (google.api.http) = {
            get: "/api/v1/playlists/{id}",
        };
    }

    rpc Cancel(CancelPlaylistRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/v1/playlists/{id}/cancel",
            body: "*"
        };
    }

    rpc GetManifest(GetPlaylistManifestRequest) returns (PlaylistManifest) {
        option (google.api.http) = {
            get: "/api/v1/playlists/{id}/manifest.json",
        };
    }
}

message GetPlaylistRequest {
    string id = 1;
}

message ClosePlaylistRequest {
    string id = 1;
    string variant_id = 2;
}

message CancelPlaylistRequest {
    string id = 1;
}

message AddSegmentRequest {
    string playlist_id = 1;
    string variant_id = 2 [(validator.field) = {regex: ".+"}];
    uint64 num = 3 [(validator.field) = {int_gt : 0}];
    string name = 4 [(validator.field) = {regex: ".+"}];
    double duration = 5 [(validator.field) = {float_gt: 0, float_lt: 11}];
    bool is_live = 6;
    bool is_last = 7;
}

message GetPlaylistManifestRequest {
    string id = 1;
}